{"version":3,"sources":["api/port.js","components/JoinSession.js","components/NewSession.js","components/Landing.js","components/Waiting.js","components/Board.js","components/Stats.js","components/Game.js","components/Lobby.js","components/MainContainer.js","App.js","serviceWorker.js","index.js"],"names":["socket","io","JoinSession","useState","isDialogOpen","setDialogOpen","username","setUsername","roomKey","setRoomKey","invalid","setInvalid","incomplete","setIncomplete","handleClose","useEffect","on","Button","variant","size","color","onClick","Snackbar","open","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","event","reason","Alert","severity","Dialog","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","TextField","autoFocus","margin","label","type","fullWidth","required","value","onChange","target","DialogActions","emit","preventDefault","NewSession","props","Landing","Grid","container","direction","style","minHeight","textAlign","marginTop","justify","item","Typography","gutterBottom","spacing","xs","marginRight","href","useStyles","makeStyles","theme","snackBar","bottom","Waiting","classes","openCopyMessage","setOpenCopyMessage","alignItems","anchorOriginBottomLeft","message","action","Fragment","IconButton","aria-label","fontSize","CircularProgress","navigator","clipboard","writeText","Board","gamestate","isp1","squareClicked","index","grid","p1_turn","valueDecider","val","class","className","Stats","wins","p1_score","p2_score","losses","ties","p2_name","p1_name","Game","announcement","setAnnouncement","msg","setMsg","oppDisconnected","setOppDisconnected","text","setTimeout","Lobby","gameState","waiting","setGameState","Container","landing","setLanding","lobby","setlobby","setWaiting","setIsp1","name","newRoomKey","prevState","App","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.bcefd464.chunk.js","sourcesContent":["import io from 'socket.io-client';\r\n\r\nconst port = \"/\"; //need to change before deployment\r\nconst socket = io(port);\r\nexport default socket;","import React, { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n//import io from 'socket.io-client';\r\nimport socket from '../api/port';\r\n\r\n\r\n\r\nexport default function JoinSession() {\r\n    const [isDialogOpen, setDialogOpen] = useState(false);\r\n    const [username, setUsername] = useState('');\r\n    const [roomKey, setRoomKey] = useState('');\r\n    const [invalid, setInvalid] = useState(false);\r\n    const [incomplete, setIncomplete] = useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setDialogOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setDialogOpen(false);\r\n        setIncomplete(false);\r\n    };\r\n\r\n    const handleSumbit = (event) => {\r\n        // Logic to Come Here\r\n        if (username !== '' && roomKey !== '') {\r\n            setDialogOpen(false);\r\n            setIncomplete(false);\r\n            socket.emit(\"join-session\", roomKey, username);\r\n        } else {\r\n            event.preventDefault();\r\n            setIncomplete(true);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        socket.on(\"invalid-roomkey\", () => {\r\n            setInvalid(true);\r\n        })\r\n    }, [])\r\n\r\n    const handleSnackBarClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setInvalid(false);\r\n    };\r\n\r\n    const handleUsernameChange = (event) => {\r\n        setUsername(event.target.value);\r\n    };\r\n\r\n    const handleRoomKeyChange = (event) => {\r\n        setRoomKey(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button variant=\"contained\" size=\"large\" color=\"primary\" onClick={handleClickOpen}>\r\n                Join a Session\r\n            </Button>\r\n            <Snackbar\r\n                open={invalid}\r\n                autoHideDuration={6000}\r\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                onClose={handleSnackBarClose}\r\n            >\r\n                <Alert variant=\"filled\" severity=\"error\">Invalid Room Key. Please try again.</Alert>\r\n            </Snackbar>\r\n            <Dialog open={isDialogOpen} onClose={handleClose} aria-labelledby=\"form-dialog-create-session\">\r\n                {incomplete && <Alert severity=\"error\">Please enter username & room key</Alert>}\r\n                <DialogTitle id=\"form-dialog-title\">Join a Session</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        To join a session, please enter your username and room key\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"username\"\r\n                        label=\"Username\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        required\r\n                        value={username}\r\n                        onChange={handleUsernameChange}\r\n                    />\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        id=\"roomkey\"\r\n                        label=\"Room Key\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        required\r\n                        value={roomKey}\r\n                        onChange={handleRoomKeyChange}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"secondary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleSumbit} color=\"primary\">\r\n                        Join\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\n//import io from 'socket.io-client';\r\nimport socket from '../api/port';\r\n\r\nexport default function NewSession(props) {\r\n    const [isDialogOpen, setDialogOpen] = useState(false);\r\n    const [username, setUsername] = useState('');\r\n    const [incomplete, setIncomplete] = useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setDialogOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setDialogOpen(false);\r\n        setIncomplete(false);\r\n    };\r\n\r\n    const handleSumbit = (event) => {\r\n        // Logic to Come Here\r\n        if (username !== '') {\r\n            setDialogOpen(false);\r\n            setIncomplete(false);\r\n            socket.emit(\"create-session\", username);\r\n        } else {\r\n            event.preventDefault();\r\n            setIncomplete(true);\r\n            // TODO: Give a warning\r\n        }\r\n\r\n    };\r\n\r\n    const handleUsernameChange = (event) => {\r\n        setUsername(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button variant=\"contained\" color=\"primary\" size=\"large\" onClick={handleClickOpen}>\r\n                Create Session\r\n            </Button>\r\n            <Dialog open={isDialogOpen} onClose={handleClose} aria-labelledby=\"form-dialog-create-session\">\r\n                {incomplete && <Alert severity=\"error\">Please enter your username</Alert>}\r\n                <DialogTitle id=\"form-dialog-title\"> Create a Session</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        To create a new session, please enter your username and hit the join button\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"username\"\r\n                        label=\"Username\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        value={username}\r\n                        onChange={handleUsernameChange}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"secondary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleSumbit} color=\"primary\">\r\n                        Create & Join\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport JoinSession from './JoinSession';\r\nimport NewSession from './NewSession';\r\n\r\n\r\nexport default function Landing() {\r\n    return (\r\n        <Grid container direction=\"column\" style={{ minHeight: '100vh', textAlign: 'center', marginTop: '-2rem' }} justify=\"center\" >\r\n            <Grid item >\r\n                <Typography variant=\"h3\" gutterBottom>\r\n                    Tic-Tac-Toe\r\n                </Typography>\r\n            </Grid>\r\n            <br />\r\n            <Grid item container spacing={4} xs={12} style={{ textAlign: 'center' }} justify=\"center\">\r\n                <Grid item>\r\n                    <NewSession />\r\n                </Grid>\r\n                <Grid item>\r\n                    <JoinSession />\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item style={{ marginTop: '2rem' }}>\r\n                <Button variant=\"contained\" target=\"_blank\" style={{ marginRight: '2rem' }} color=\"default\" href=\"https://github.com/rbajaj1997/tic-tac-toe\">\r\n                    Github Repo\r\n            </Button>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    snackBar: {\r\n        '@media (min-width: 600px)': {\r\n            bottom: '40px'\r\n        }\r\n    }\r\n}));\r\n\r\n\r\nexport default function Waiting(props) {\r\n    const classes = useStyles();\r\n    const [openCopyMessage, setOpenCopyMessage] = useState(false);\r\n\r\n    const handleCopy = () => {\r\n        navigator.clipboard.writeText(props.roomKey);\r\n        setOpenCopyMessage(true);\r\n    }\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpenCopyMessage(false);\r\n    };\r\n\r\n    return (\r\n        <Grid container direction=\"column\" spacing={4} xs={12} justify=\"center\" alignItems=\"center\" style={{ minHeight: '100vh', textAlign: 'center' }}>\r\n            <Snackbar\r\n                anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\r\n                classes={{ anchorOriginBottomLeft: classes.snackBar }}\r\n                open={openCopyMessage}\r\n                autoHideDuration={2000}\r\n                onClose={handleClose}\r\n                message=\"Room Key Copied!\"\r\n                action={\r\n                    <React.Fragment>\r\n                        <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\r\n                            <CloseIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </React.Fragment>\r\n                } />\r\n            <Grid item>\r\n                <Typography variant=\"h5\" gutterBottom>\r\n                    Waiting for someone to join\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n                <CircularProgress />\r\n            </Grid>\r\n            <Grid item>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    Click to Copy Session Code:\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item style={{ marginTop: '-2rem' }}>\r\n                <Button variant=\"contained\" color=\"default\" onClick={handleCopy}>\r\n                    {props.roomKey}\r\n                </Button>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport socket from '../api/port';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\n\r\nexport default function Board(props) {\r\n    const { gamestate, isp1 } = props;\r\n    const squareClicked = (index) => {\r\n        // Check if the square has already been clicked -> then return\r\n        if (gamestate.grid[index] !== 0) {\r\n            return;\r\n        } else {\r\n            // Check if it is the correct player's turn -> otherwise return\r\n            if ((gamestate.p1_turn && !isp1) || (!gamestate.p1_turn && isp1)) {\r\n                return;\r\n            }\r\n            if (isp1) {\r\n                socket.emit(\"player-move\", index, 1);\r\n            } else {\r\n                socket.emit(\"player-move\", index, -1);\r\n            }\r\n        }\r\n    }\r\n\r\n    const valueDecider = (val) => {\r\n        switch (val) {\r\n            case 1:\r\n                return <RadioButtonUncheckedIcon style={{ fontSize: 80 }} />;\r\n            case -1:\r\n                return <CloseIcon style={{ fontSize: 80 }} />;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div class=\"arena-board\">\r\n            <div class=\"arena-board_row1\">\r\n                <button onClick={() => squareClicked(0)} className=\"square\">\r\n                    {valueDecider(gamestate.grid[0])}\r\n                </button>\r\n                <button onClick={() => squareClicked(1)} className=\"square square_rightLeft\">\r\n                    {valueDecider(gamestate.grid[1])}\r\n                </button>\r\n                <button onClick={() => squareClicked(2)} className=\"square\">\r\n                    {valueDecider(gamestate.grid[2])}\r\n                </button>\r\n            </div>\r\n            <div class=\"arena-board_row2\">\r\n                <button onClick={() => squareClicked(3)} className=\"square square_topBottom\">\r\n                    {valueDecider(gamestate.grid[3])}\r\n                </button>\r\n                <button onClick={() => squareClicked(4)} className=\"square square_rightLeft square_topBottom\">\r\n                    {valueDecider(gamestate.grid[4])}\r\n                </button>\r\n                <button onClick={() => squareClicked(5)} className=\"square square_topBottom\">\r\n                    {valueDecider(gamestate.grid[5])}\r\n                </button>\r\n            </div>\r\n            <div class=\"arena-board_row3\">\r\n                <button onClick={() => squareClicked(6)} className=\"square\">\r\n                    {valueDecider(gamestate.grid[6])}\r\n                </button>\r\n                <button onClick={() => squareClicked(7)} className=\"square square_rightLeft\">\r\n                    {valueDecider(gamestate.grid[7])}\r\n                </button>\r\n                <button onClick={() => squareClicked(8)} className=\"square\">\r\n                    {valueDecider(gamestate.grid[8])}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nexport default function Stats(props) {\r\n    const { gamestate, isp1 } = props;\r\n\r\n    const wins = isp1 ? gamestate.p1_score : gamestate.p2_score;\r\n    const losses = isp1 ? gamestate.p2_score : gamestate.p1_score;\r\n    const ties = gamestate.ties;\r\n\r\n\r\n    return (\r\n        <div className=\"arena-stats\">\r\n            <div className=\"arena-stats__turn\">\r\n                <Typography variant=\"h6\">\r\n                    {isp1 ? gamestate.p1_turn ? \"Your turn\" : `${gamestate.p2_name}'s turn` : null}\r\n                    {!isp1 ? !gamestate.p1_turn ? \"Your turn\" : `${gamestate.p1_name}'s turn` : null}\r\n                </Typography>\r\n            </div>\r\n            <div className=\"arena-stats__spinner\">\r\n                {((isp1 && !gamestate.p1_turn) || (!isp1 && gamestate.p1_turn)) ? <CircularProgress /> : null}\r\n            </div>\r\n            <div className=\"arena-stats__score\">\r\n                <div className=\"arena-stats__score--title\">\r\n                    <div>\r\n                        <span className=\"full-text\"><Typography variant=\"h6\">Wins</Typography></span>\r\n                        <span className=\"short-text\"><Typography variant=\"h6\">W</Typography></span>\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"full-text\"><Typography variant=\"h6\">Ties</Typography></span>\r\n                        <span className=\"short-text\"><Typography variant=\"h6\">T</Typography></span>\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"full-text\"><Typography variant=\"h6\">Losses</Typography></span>\r\n                        <span className=\"short-text\"><Typography variant=\"h6\">L</Typography></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"arena-stats__score--score\">\r\n                    <div><Typography variant=\"h6\">{wins}</Typography></div>\r\n                    <div><Typography variant=\"h6\">{ties}</Typography></div>\r\n                    <div><Typography variant=\"h6\">{losses}</Typography></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport socket from '../api/port';\r\nimport Board from './Board';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Stats from './Stats';\r\n\r\n/**\r\n * \r\n * 1 -> Player 1 i.e He is O\r\n * -1 -> Player 2 i.e He is X\r\n */\r\n\r\n\r\nexport default function Game(props) {\r\n    const { gamestate, isp1 } = props;\r\n    const [announcement, setAnnouncement] = useState(false);\r\n    const [msg, setMsg] = useState('');\r\n    const [oppDisconnected, setOppDisconnected] = useState(false);\r\n\r\n    useEffect(() => {\r\n        socket.on(\"announcement\", (text) => {\r\n            switch (text) {\r\n                case 'p1':\r\n                    setAnnouncement(true);\r\n                    if (isp1) {\r\n                        setMsg('You Won!');\r\n                    } else {\r\n                        setMsg('You Lost');\r\n                    }\r\n                    break;\r\n                case 'p2':\r\n                    setAnnouncement(true);\r\n                    if (isp1) {\r\n                        setMsg('You Lost');\r\n                    } else {\r\n                        setMsg('You Won!');\r\n                    }\r\n                    break;\r\n                case 'tie':\r\n                    setAnnouncement(true);\r\n                    setMsg('It\\'s a tie! Play another one?');\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            setTimeout(() => {\r\n                setAnnouncement(false);\r\n            }, 1250);\r\n        });\r\n\r\n        socket.on(\"user-disconnected\", () => {\r\n            setOppDisconnected(true);\r\n        })\r\n\r\n    }, [isp1])\r\n\r\n    return (\r\n        <div className=\"arena\">\r\n            {oppDisconnected && <div> <Typography variant=\"h4\">Opponent Disconnected!</Typography> </div>}\r\n            {!oppDisconnected && <Board gamestate={gamestate} isp1={isp1} />}\r\n            {!oppDisconnected && announcement && <div className=\"arena-stats\"><Typography variant=\"h4\">{msg}</Typography></div>}\r\n            {!oppDisconnected && !announcement && <Stats gamestate={gamestate} isp1={isp1} />}\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport Waiting from './Waiting';\r\nimport socket from '../api/port';\r\nimport Game from './Game';\r\n\r\nexport default function Lobby(props) {\r\n    const { gameState, roomKey, waiting, isp1 } = props;\r\n    const [gamestate, setGameState] = useState(gameState)\r\n    useEffect(() => {\r\n        socket.on(\"update\", (gamestate) => {\r\n            setGameState(gamestate);\r\n        })\r\n    }, [])\r\n    return (\r\n        <div>\r\n            {waiting && <Waiting roomKey={roomKey} />}\r\n            {!waiting && <Game gamestate={gamestate} isp1={isp1} />}\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport socket from '../api/port'\r\nimport Landing from './Landing';\r\nimport Lobby from './Lobby';\r\n\r\nexport default function Container() {\r\n    const [landing, setLanding] = useState(true);\r\n    const [lobby, setlobby] = useState(false);\r\n    const [waiting, setWaiting] = useState(true);\r\n    const [roomKey, setRoomKey] = useState('');\r\n    const [isp1, setIsp1] = useState(false);\r\n\r\n    const [gameState, setGameState] = useState({\r\n        p1_name: \"\",\r\n        p2_name: \"\",\r\n        p1_score: 0,\r\n        p2_score: 0,\r\n        ties: 0,\r\n        p1_turn: true,\r\n        grid: [0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n    })\r\n\r\n    useEffect(() => {\r\n        socket.on(\"session-created\", (name, newRoomKey) => {\r\n            setGameState(prevState => ({\r\n                ...prevState,\r\n                p1_name: name\r\n            }));\r\n            setRoomKey(newRoomKey);\r\n            setLanding(false);\r\n            setlobby(true);\r\n            setIsp1(true);\r\n        });\r\n\r\n        socket.on(\"valid-code\", (gameState) => {\r\n            setGameState(gameState);\r\n            setWaiting(false);\r\n            setLanding(false);\r\n            setlobby(true);\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {landing && <Landing />}\r\n            {lobby && <Lobby gameState={gameState} roomKey={roomKey} waiting={waiting} isp1={isp1} />}\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport MainContainer from './components/MainContainer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nfunction App() {\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<CssBaseline />\n\t\t\t<MainContainer />\n\t\t</React.Fragment>\n\t);\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<App />,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}